description: fix int-in-bool-context gcc warnings
author: Michael Gilbert <mgilbert@debian.org>

--- a/third_party/webrtc/modules/video_processing/video_denoiser.cc
+++ b/third_party/webrtc/modules/video_processing/video_denoiser.cc
@@ -191,7 +191,7 @@ void VideoDenoiser::CopySrcOnMOB(const u
       // artifacts.
       if (mb_filter_decision_[mb_index] != FILTER_BLOCK ||
           IsTrailingBlock(moving_edge_, mb_row, mb_col) ||
-          (x_density_[mb_col] * y_density_[mb_row] &&
+          (x_density_[mb_col] * y_density_[mb_row] != 0 &&
            moving_object_[mb_row * mb_cols_ + mb_col])) {
         // Copy y source.
         filter_->CopyMem16x16(mb_src, stride_src, mb_dst, stride_dst);
--- a/gpu/command_buffer/service/gles2_cmd_decoder.cc
+++ b/gpu/command_buffer/service/gles2_cmd_decoder.cc
@@ -16038,7 +16038,8 @@ bool GLES2DecoderImpl::GetUniformSetup(G
   }
   uint32_t checked_size = 0;
   if (!SizedResult<T>::ComputeSize(num_elements).AssignIfValid(&checked_size)) {
-    return error::kOutOfBounds;
+    *error = error::kOutOfBounds;
+    return false;
   }
   result = GetSharedMemoryAs<SizedResult<T>*>(shm_id, shm_offset, checked_size);
   if (!result) {
--- a/components/download/internal/common/download_item_impl.cc
+++ b/components/download/internal/common/download_item_impl.cc
@@ -869,7 +869,7 @@ const base::FilePath& DownloadItemImpl::
 }
 
 base::FilePath DownloadItemImpl::GetTemporaryFilePath() const {
-  if (state_ == TARGET_PENDING_INTERNAL || INTERRUPTED_TARGET_PENDING_INTERNAL)
+  if (state_ == TARGET_PENDING_INTERNAL || state_ == INTERRUPTED_TARGET_PENDING_INTERNAL)
     return download_file_ ? download_file_->FullPath() : base::FilePath();
   return base::FilePath();
 }
--- a/content/browser/renderer_host/render_widget_host_view_base.cc
+++ b/content/browser/renderer_host/render_widget_host_view_base.cc
@@ -311,15 +311,16 @@ void RenderWidgetHostViewBase::SetBackgr
   if (default_background_color_ == color)
     return;
 
-  bool opaque = default_background_color_
-                    ? SkColorGetA(*default_background_color_)
-                    : SK_AlphaOPAQUE;
+  bool opaque_background = true;
+  if (default_background_color_)
+    opaque_background = (SkColorGetA(*default_background_color_) == SK_AlphaOPAQUE);
   default_background_color_ = color;
   UpdateBackgroundColor();
-  if (opaque != (SkColorGetA(color) == SK_AlphaOPAQUE)) {
+
+  bool opaque_foreground = (SkColorGetA(color) == SK_AlphaOPAQUE);
+  if (opaque_background != opaque_foreground) {
     if (host()->owner_delegate()) {
-      host()->owner_delegate()->SetBackgroundOpaque(SkColorGetA(color) ==
-                                                    SK_AlphaOPAQUE);
+      host()->owner_delegate()->SetBackgroundOpaque(opaque_foreground);
     }
   }
 }
--- a/third_party/blink/renderer/core/html/parser/html_tree_builder.cc
+++ b/third_party/blink/renderer/core/html/parser/html_tree_builder.cc
@@ -938,7 +938,7 @@ void HTMLTreeBuilder::ProcessStartTagFor
   }
   if (token->GetName() == kColTag) {
     ProcessFakeStartTag(kColgroupTag);
-    DCHECK(kInColumnGroupMode);
+    DCHECK_EQ(GetInsertionMode(), kInColumnGroupMode);
     ProcessStartTag(token);
     return;
   }
--- a/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h
+++ b/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h
@@ -10,7 +10,7 @@
 #include "ipc/ipc_message_macros.h"
 #include "third_party/skia/include/core/SkImageInfo.h"
 
-IPC_ENUM_TRAITS_VALIDATE(SkColorType, kLastEnum_SkColorType)
-IPC_ENUM_TRAITS_VALIDATE(SkAlphaType, kLastEnum_SkAlphaType)
+IPC_ENUM_TRAITS_VALIDATE(SkColorType, value != kLastEnum_SkColorType)
+IPC_ENUM_TRAITS_VALIDATE(SkAlphaType, value != kLastEnum_SkAlphaType)
 
 #endif  // UI_GFX_IPC_SKIA_GFX_SKIA_PARAM_TRAITS_MACROS_H_
